first install: Docker, Kubectl, Helm and Kind

cat <<EOF | /home/starivore/kind create cluster --config=-
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  image: kindest/node:v1.20.0
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    protocol: TCP
  - containerPort: 443
    hostPort: 443
    protocol: TCP
  - containerPort: 30300
    hostPort: 30300
    protocol: TCP
EOF


kubectl apply -f deploy.yaml

helm repo add minio https://helm.min.io
helm install minio minio/minio --set accessKey=minio --set secretKey=themanoutoftime --set service.type=NodePort --set service.nodePort=30300

helm repo add kvaps https://kvaps.github.io/charts
helm install nfs-server-provisioner kvaps/nfs-server-provisioner

kubectl apply -f https://raw.githubusercontent.com/grycap/oscar/master/deploy/yaml/oscar-namespaces.yaml

helm repo add grycap https://grycap.github.io/helm-charts/
helm install --namespace=oscar oscar grycap/oscar --set authPass=themanoutoftime --set service.type=ClusterIP --set ingress.create=true --set volume.storageClassName=nfs --set minIO.endpoint=http://minio.default:9000 --set minIO.TLSVerify=false --set minIO.accessKey=minio --set minIO.secretKey=yourpassword

arkade install openfaas --load-balancer --operator --set functionNamespace=oscar


OSCAR URL: localhost
MinIO URL: http://localhost:30300



#oscar-cli commands:
./oscar-cli cluster add kind https://localhost oscar --password-stdin 
-config.yaml:
    oscar:
      kind:
        endpoint: https://localhost                                            //127.0.0.1 might be needed instead
        auth_user: oscar
        auth_password: yourpassword
        ssl_verify: false
        memory: 256Mi
        log_level: DEBUG
    default: kind

> ./oscar-cli service logs list onnx-test2
JOB NAME				STATUS		CREATION TIME		START TIME		FINISH TIME
786b1537-825f-4a4e-8464-e407befeb578	Succeeded	2022-01-02 20:04:11	2022-01-02 20:04:14	2022-01-02 20:04:15
7dd62e74-6add-4e4d-b769-5e08b4345669	Succeeded	2022-01-03 23:16:48	2022-01-03 23:16:51	2022-01-03 23:16:52
9ccbd10f-3ab1-464f-9602-d61ca61b2c22	Succeeded	2021-12-21 02:50:23	2021-12-21 02:55:10	2021-12-21 02:55:11
b33b5b89-03a8-495c-aacf-58212e7ec1e2	Succeeded	2022-01-02 20:46:21	2022-01-02 20:46:24	2022-01-02 20:46:26
c36c8728-f3af-4dea-8656-a236bc8268b3	Succeeded	2022-01-04 23:51:36	2022-01-04 23:51:39	2022-01-04 23:51:41
6d8eebf8-5c09-47d9-88a1-f4ff93ae1bf7	Succeeded	2022-01-02 20:02:29	2022-01-02 20:02:32	2022-01-02 20:02:34

>  ./oscar-cli service logs get onnx-test2 786b1537-825f-4a4e-8464-e407befeb578
2022-01-02 19:04:14,765 - supervisor - INFO - Storage event found.
2022-01-02 19:04:14,765 - supervisor - INFO - MINIO event created
2022-01-02 19:04:14,765 - supervisor - INFO - Reading storage configuration
2022-01-02 19:04:14,774 - supervisor - INFO - SUPERVISOR: Initializing Binary supervisor
2022-01-02 19:04:15,170 - supervisor - INFO - Found 'MINIO' input provider
2022-01-02 19:04:15,170 - supervisor - INFO - Downloading item from bucket 'onnx2' with key 'input/results.txt'
2022-01-02 19:04:15,189 - supervisor - INFO - Successful download of file 'input/results.txt' from bucket 'onnx2' in path '/tmp/tmp81izea8t/results.txt'
2022-01-02 19:04:15,189 - supervisor - INFO - INPUT_FILE_PATH variable set to '/tmp/tmp81izea8t/results.txt'
2022-01-02 19:04:15,190 - supervisor - INFO - Script file found in '/oscar/config/script.sh'
2022-01-02 19:04:15,560 - supervisor - INFO - Searching for files to upload in folder '/tmp/tmpcv7eyc8s'
2022-01-02 19:04:15,560 - supervisor - INFO - Checking files for uploading to 'minio.default' on path: 'onnx2/output'
2022-01-02 19:04:15,566 - supervisor - INFO - Uploading file 'output/output.txt' to bucket 'onnx2'
2022-01-02 19:04:15,583 - supervisor - INFO - Creating response
SCRIPT: onnx_second_inference.py. File available in /tmp/tmp81izea8t/results.txt


#minio client comands:
https://docs.min.io/docs/minio-client-complete-guide.html

> ./mc ls local
[2021-12-20 02:43:51 CET]     0B onnx/
[2021-12-21 02:48:26 CET]     0B onnx2/
[2021-12-13 02:49:03 CET]     0B plants/

> ./mc cp results.txt local/onnx2/input/results.txt
results.txt:                563 B / 563 B ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 33.30 KiB/s 0s(base) 
> ./mc ls local/onnx2/input
[2022-01-06 20:30:23 CET]   563B results.txt

> ./mc ls local/onnx2/output
[2022-01-06 20:30:27 CET] 2.1KiB output.txt

> ./mc cp local/onnx2/output/output.txt output.txt
...nnx2/output/output.txt:  2.09 KiB / 2.09 KiB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 425.02 KiB/s 0s(base) 


#Docker commands:
sudo docker build .
sudo docker build --no-cache .
sudo docker ps

sudo docker tag 59d915fd33c2 thestarivore/onnx-test2:latest
sudo docker push thestarivore/onnx-test2:latest

sudo docker run f64e3c4d9226 python /opt/DownloadONNXSplitter2/onnx_second_inference.py --onnx_path=/opt/DownloadONNXSplitter2/SplittedModels --input_file=/opt/DownloadONNXSplitter2/TestData2/results.txt

sudo docker run f64e3c4d9226 python /opt/DownloadONNXSplitter2/onnx_second_inference.py --onnx_path=/opt/DownloadONNXSplitter2/MobileNetV2_SplittedModles --input_file=/opt/DownloadONNXSplitter2/TestData_MobileNetV2/results.txt


#kubectl commands:
> kubectl get pods --namespace=oscar-svc -o wide --field-selector spec.nodeName=kind-control-plane
NAME                                         READY   STATUS      RESTARTS   AGE     IP             NODE                 NOMINATED NODE   READINESS GATES
0eb6eca5-369f-4bab-bd14-919ab9a9f52a-d8x7x   0/1     Completed   0          14d     10.244.0.113   kind-control-plane   <none>           <none>
5f85a53e-b75e-42d9-8881-cf31d1e3fd92-wgpp4   0/1     Completed   0          3m46s   10.244.0.41    kind-control-plane   <none>           <none>
81eb9f13-07db-4ef3-9f51-bae295cdde52-gmgv2   0/1     Completed   0          56d     10.244.0.181   kind-control-plane   <none>           <none>
c6a2c0b7-a9dd-4849-9942-08d93c693d45-wxhx6   0/1     Completed   0          15d     10.244.0.17    kind-control-plane   <none>           <none>
populate-volume-job-xrj7q                    0/1     Completed   0          91d     10.244.0.13    kind-control-plane   <none>           <none>

> kubectl get pod 5f85a53e-b75e-42d9-8881-cf31d1e3fd92-wgpp4 --namespace=oscar-svc
NAME                                         READY   STATUS      RESTARTS   AGE
5f85a53e-b75e-42d9-8881-cf31d1e3fd92-wgpp4   0/1     Completed   0          8m46s

> kubectl get pod 5f85a53e-b75e-42d9-8881-cf31d1e3fd92-wgpp4 --namespace=oscar-svc -o jsonpath="{range .status.conditions[*]}{.type}{','}{.lastTransitionTime}{'\n'}{end}"
Initialized,2022-03-15T00:08:31Z
Ready,2022-03-15T00:08:36Z
ContainersReady,2022-03-15T00:08:36Z
PodScheduled,2022-03-15T00:08:31Z

# ExecutionTime:
> kubectl get pod d79cd19d-9131-409e-8462-2366a056b26d-4r4bl --namespace=oscar-svc -o jsonpath='{.metadata.creationTimestamp}'
2022-03-15T00:27:07Zs
> kubectl get pod d79cd19d-9131-409e-8462-2366a056b26d-4r4bl --namespace=oscar-svc -o jsonpath='{.status.containerStatuses[0].state.terminated.finishedAt}'
2022-03-15T00:27:12Z



##########################################################################################
 OSCAR RESTART WHEN is no longher responding
##########################################################################################
> docker ps
WARNING: Error loading config file: /home/starivore/.docker/config.json: open /home/starivore/.docker/config.json: permission denied
CONTAINER ID   IMAGE                  COMMAND                  CREATED        STATUS              PORTS                                                                                           NAMES
ef7c124143c3   kindest/node:v1.20.0   "/usr/local/bin/entr…"   4 months ago   Up About a minute   0.0.0.0:80->80/tcp, 0.0.0.0:443->443/tcp, 0.0.0.0:30300->30300/tcp, 127.0.0.1:44021->6443/tcp   kind-control-plane

> sudo docker container restart ef7c124143c3


